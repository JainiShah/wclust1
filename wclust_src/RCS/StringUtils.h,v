head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2008.06.13.15.35.29;	author samn;	state Exp;
branches;
next	1.3;

1.3
date	2008.04.01.06.06.38;	author samn;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.10.19.06.39;	author samn;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.09.23.38.22;	author samn;	state Exp;
branches;
next	;


desc
@""
@


1.4
log
@added char* version of split
@
text
@// $Id: StringUtils.h,v 1.3 2008/04/01 06:06:38 samn Exp $ 
#ifndef STRING_UTILS_H
#define STRING_UTILS_H

#include <string>
#include <vector>

//remove newlines from end of str
bool Chop(char* str);

//split string based on chars in strDelim and return tokens in vstr
void Split(std::string& str,std::string& strDelim,std::vector<std::string>& vstr);
//split string based on chars in strDelim and return tokens in vstr , will modify cStr!!!!
void Split(char* cStr,std::string& strDelim,std::vector<std::string>& vstr);

//remove double quotes from str
void StripQuotes(std::string& str);

#endif
@


1.3
log
@added StripQuotes
@
text
@d1 1
a1 1
// $Id$ 
d13 2
@


1.2
log
@moved function defs to StringUtils.cpp, added Split
@
text
@d1 17
a17 14
// $Id$ 
#ifndef STRING_UTILS_H
#define STRING_UTILS_H

#include <string>
#include <vector>

//remove newlines from end of str
bool Chop(char* str);

//split string based on chars in strDelim and return tokens in vstr
void Split(std::string& str,std::string& strDelim,std::vector<std::string>& vstr);

#endif
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
#include <stdio.h>
d8 5
a12 14
inline bool Chop(char* str)
{
	int iLen = strlen(str);
	if(iLen)
	{
		if(str[iLen-1]=='\n' || str[iLen-1]=='\r')
		{
			str[iLen-1]=0;
			Chop(str); //in case \r\n
			return true;
		}
	}
	return false;
}
@
